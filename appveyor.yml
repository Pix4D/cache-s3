version: 1.0.{build}
image: Visual Studio 2015

build: off

environment:
  global:
    # Avoid long paths on Windows
    STACK_ROOT: 'c:\s'
    STACK_WORK: '.w'
    WORK_DIR: 'c:\w'


before_test:
# Avoid long paths not to reach MAX_PATH of 260 chars
- xcopy /q /s /e /r /k /i /v /h /y C:\projects\cache-s3 "%WORK_DIR%"
- cd "%WORK_DIR%"

- ps: >-
    if (-not $env:APPVEYOR_PULL_REQUEST_NUMBER ) {
        if ($env:APPVEYOR_REPO_BRANCH -eq "master" ) {
          echo "It is master"
        }
    }

# Install stack
- mkdir %APPDATA%\local\bin\
- set PATH=%PATH%;%APPDATA%\local\bin
- ps: Start-FileDownload http://www.stackage.org/stack/windows-x86_64 -FileName stack.zip
- 7z x stack.zip stack.exe
- cp stack.exe %APPDATA%\local\bin\stack.exe

# Try to restore cache
# - ps: Start-FileDownload https://s3.amazonaws.com/lehins-ci-cache/cache-s3.exe -FileName cache-s3.exe
# - cache-s3.exe --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug restore stack --base-branch=master
# - cache-s3.exe --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug restore stack work --base-branch=master


- ps: Start-FileDownload https://s3.amazonaws.com/lehins-ci-cache/cache-s3.exe -FileName cache-s3.exe
# - 7z x cache-s3.zip cache-s3.exe
- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug restore stack --base-branch=master
- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug restore stack work --base-branch=master

# - if exist %APPDATA%\local\bin\cache-s3.exe stack exec -- cache-s3.exe --prefix=cache-s3 --suffix=windows -v debug restore stack --base-branch=master
# - if exist %APPDATA%\local\bin\cache-s3.exe stack exec -- cache-s3.exe --prefix=cache-s3 --suffix=windows -v debug restore stack work --base-branch=master


test_script:
- cd "%WORK_DIR%"
- stack --verbosity warn setup --no-reinstall > nul
- stack install
    -j 2
    --no-terminal
    --work-dir %STACK_WORK%


after_test:
# - ps: >-
#     if (-not $env:APPVEYOR_PULL_REQUEST_NUMBER ) {
#         if ($env:APPVEYOR_REPO_BRANCH -eq "master" ) {
#             stack exec -- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug save stack --base-branch=master
#         }
#         stack exec -- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug save stack work
#     }
- stack install github-release
- ps: >-
    if (-not $env:APPVEYOR_PULL_REQUEST_NUMBER ) {
      if ($env:APPVEYOR_REPO_BRANCH -eq "master" ) {
        stack exec -- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug save stack
      }
    }
#- stack exec -- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug save stack
- stack exec -- cache-s3 --prefix=%APPVEYOR_PROJECT_NAME% --suffix=windows -v debug save stack work
- ps: >-
    if ($env:APPVEYOR_REPO_TAG) {
      cp %APPDATA%\local\bin\cache-s3.exe cache-s3.exe
      7z a cache-s3.zip cache-s3.exe
      github-release upload --token $env:GITHUB_TOKEN --owner lehins --repo cache-s3 --file cache-s3.zip --name test-release --tag $env:APPVEYOR_REPO_TAG_NAME --name cache-s3-$env:APPVEYOR_REPO_TAG_NAME-windows_x64-86.zip
    }
notifications:
  - provider: Email
    to:
      - lehins@yandex.ru
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: true
